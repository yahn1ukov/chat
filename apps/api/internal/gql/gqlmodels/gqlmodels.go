// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package gqlmodels

import (
	"time"

	"github.com/google/uuid"
)

type BaseUser interface {
	IsBaseUser()
	GetID() uuid.UUID
	GetUsername() string
	GetColor() string
}

type AuthInput struct {
	Username string `json:"username"`
}

type Message struct {
	ID        uuid.UUID    `json:"id"`
	UserID    uuid.UUID    `json:"userId"`
	User      *MessageUser `json:"user"`
	Text      string       `json:"text"`
	CreatedAt time.Time    `json:"createdAt"`
}

type MessageUser struct {
	ID       uuid.UUID `json:"id"`
	Username string    `json:"username"`
	Color    string    `json:"color"`
}

func (MessageUser) IsBaseUser()              {}
func (this MessageUser) GetID() uuid.UUID    { return this.ID }
func (this MessageUser) GetUsername() string { return this.Username }
func (this MessageUser) GetColor() string    { return this.Color }

type Mutation struct {
}

type Query struct {
}

type SendMessageInput struct {
	Text string `json:"text"`
}

type Subscription struct {
}

type User struct {
	ID        uuid.UUID `json:"id"`
	Username  string    `json:"username"`
	Color     string    `json:"color"`
	CreatedAt time.Time `json:"createdAt"`
}

func (User) IsBaseUser()              {}
func (this User) GetID() uuid.UUID    { return this.ID }
func (this User) GetUsername() string { return this.Username }
func (this User) GetColor() string    { return this.Color }
